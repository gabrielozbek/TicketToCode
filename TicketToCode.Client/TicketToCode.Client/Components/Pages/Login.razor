@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Logga in</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Användarnamn</label>
        <InputText id="username" class="form-control" Value="@loginModel.Username" @onchange="e => loginModel.Username = e.Value.ToString()" />
    </div>

    <div class="form-group">
        <label for="password">Lösenord</label>
        <InputText id="password" class="form-control" type="password" Value="@loginModel.Password" @onchange="e => loginModel.Password = e.Value.ToString()" />
    </div>

    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary">Logga in</button>
    </div>
</EditForm>

@if (errorMessage != null)
{
    <div class="alert alert-danger mt-3">
        @errorMessage
    </div>
}

@code {
    private LoginModel loginModel = new LoginModel();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        // Skicka inloggningsförfrågan till backend
        var response = await Http.PostAsJsonAsync("/auth/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            // Om inloggningen lyckas, navigera till events-sidan
            Navigation.NavigateTo("/events");
        }
        else
        {
            // Om det blir ett fel, visa felmeddelande
            errorMessage = "Ogiltigt användarnamn eller lösenord!";
        }
    }

    public class LoginModel
    {
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
